- Have the bot create a youtube and spotify playlist with the shared music in it
    -> makes it easier to go through multiple songs
    -> potentially upload a shared file to youtube (unlisted) and add it to the playlist



- Syncing list of shared songs
    -> songs are deleted when a message is deleted
        -> if a message is a duplicate (meaning that there already is a message that shared that song), then the song will be removed from the shared_songs.json, even though there is still another message with that song
        -> for each song in shared_songs.json -> store list of all messages that have it


- Think of a way to automate testing
    - How do we test? Do we check whether all messages have threads?
        - There is no on_create_thread func
        - How do we get it to wait so we can see if that test was successful (creating thread, deleting message, ...)


    - Have the test bot do it?
        - The check where we make sure a message isn't from the bot itself would cause issues

    - create a third bot which does this?
        - annoying
        - benefit: could use entirely different code, wouldn't have to be in main.py

    - Have the main bot do it?
        - would already be running -> no need to 
        - problems
            - automated testing would have to be written in same program as the main bot
            - would need both bots in the same server -> both would try to moderate it, potentially reacting to each other's messages
        - would have to add additional checks for what server message is in as well as what mode (config.testing) it's in

    
    - Dedicated Testing channel? (Discord channel as well as a seperate ThreadChannel subclass)